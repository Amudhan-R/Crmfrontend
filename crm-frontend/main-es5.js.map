{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/customer-form/customer-form.component.html","./src/app/customers/customers.component.html","./src/app/error/error.component.html","./src/app/footer/footer.component.html","./src/app/login/login.component.html","./src/app/logout/logout.component.html","./src/app/menu/menu.component.html","./src/app/welcome/welcome.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.constants.ts","./src/app/app.module.ts","./src/app/customer-form/customer-form.component.css","./src/app/customer-form/customer-form.component.ts","./src/app/customers/customers.component.css","./src/app/customers/customers.component.ts","./src/app/error/error.component.css","./src/app/error/error.component.ts","./src/app/footer/footer.component.css","./src/app/footer/footer.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/logout/logout.component.css","./src/app/logout/logout.component.ts","./src/app/menu/menu.component.css","./src/app/menu/menu.component.ts","./src/app/service/basic-authentication.service.ts","./src/app/service/data/customer-data.service.ts","./src/app/service/data/welcome-data.service.ts","./src/app/service/hardcoded-authentication.service.ts","./src/app/service/http/http-intercepter-basic-auth.service.ts","./src/app/service/route-guard.service.ts","./src/app/welcome/welcome.component.css","./src/app/welcome/welcome.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- <app-welcome></app-welcome> -->\\n\\n<!-- <app-login></app-login> -->\\n\\n<app-menu></app-menu>\\n\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","module.exports = \"<h1>Customer</h1>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"alert alert-warning\\\" *ngIf=\\\"customerForm.dirty && customerForm.invalid\\\">Please, Type a valid inputs!</div>\\n    <div class=\\\"alert alert-warning\\\" *ngIf=\\\"customerForm.dirty && name.invalid\\\">Enter atleast 2 characters in name field!</div>\\n    <div class=\\\"alert alert-warning\\\" *ngIf=\\\"customerForm.dirty && email.invalid\\\">Please, Type a valid email!</div>\\n\\n    <form (ngSubmit)=\\\"!customerForm.invalid && onSave()\\\" #customerForm=\\\"ngForm\\\">\\n        <fieldset class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"customer.name\\\" class=\\\"form-control\\\" name=\\\"name\\\" required=\\\"required\\\" minlength=\\\"5\\\">\\n        </fieldset>\\n        <fieldset class=\\\"form-group\\\">\\n            <label>Birth Date</label>\\n            <input type=\\\"date\\\"\\n            [ngModel]=\\\"customer.birthDate | date:'yyyy-MM-dd'\\\"\\n            (ngModelChange)=\\\"customer.birthDate = $event\\\"\\n            class=\\\"form-control\\\" name=\\\"birthDate\\\">\\n        </fieldset>\\n        <fieldset class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"customer.email\\\" class=\\\"form-control\\\" name=\\\"email\\\" required=\\\"required\\\">\\n        </fieldset>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" >Save</button>\\n    </form>\\n</div>\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n    <div class=\\\"alert alert-success\\\" *ngIf='message'>{{message}}</div>\\n<div class=\\\"card mt-5\\\">\\n    <div class=\\\"card-header\\\">\\n            <h1>Customers Manager</h1>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n    <table class=\\\"table\\\">\\n        <thead>\\n            <tr>\\n                <th>ID</th>\\n                <th>Name</th>\\n                <th>Birth Date</th>\\n                <th>Email</th>\\n                <th colspan=\\\"2\\\">Actions</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <!-- like: for(Customer customer: customers) { -->\\n            <tr *ngFor=\\\"let customer of customers\\\">\\n                <td>{{customer.id}}</td>\\n                <td>{{customer.name}}</td>\\n                <td>{{customer.birthDate | date | uppercase}}</td> <!-- | : pipe (use to convert one field format to another format) -->\\n                <td>{{customer.email}}</td>\\n                <!-- <td><button (click)=\\\"updateCustomer(customer.id)\\\" class=\\\"btn btn-success\\\">Update</button></td>\\n                <td><button (click)=\\\"deleteCustomer(customer.id)\\\" class=\\\"btn btn-warning\\\">Delete</button></td> -->\\n                <td><div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\">\\n                    <label class=\\\"btn btn-success active btn-sm\\\">\\n                      <input type=\\\"radio\\\" name=\\\"options\\\" id=\\\"option1\\\" autocomplete=\\\"off\\\" checked (click)=\\\"updateCustomer(customer.id)\\\"> Update\\n                    </label>\\n                    <label class=\\\"btn btn-danger btn-sm\\\">\\n                      <input type=\\\"radio\\\" name=\\\"options\\\" id=\\\"option2\\\" autocomplete=\\\"off\\\" (click)=\\\"deleteCustomer(customer.id)\\\"> Delete\\n                    </label>\\n                  </div></td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n<div class=\\\"card-footer\\\">\\n        <button (click)=\\\"addCustomer()\\\" class=\\\"btn btn-primary float-right\\\">Add</button>\\n</div>\\n</div>\\n</div>\"","module.exports = \"{{errorMessage}}\\n<div>\\n    <a routerLink=\\\"/\\\">back to main page</a>\\n</div>\"","module.exports = \"<footer class=\\\"footer\\\">\\n    <div class=\\\"container\\\">\\n        <span class=\\\"text-muted\\\">All Rights Reserved 2018@Diafoni.in</span>\\n    </div>\\n</footer>\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n    </div>\\n\\n    <div class=\\\" col col-md-6 mt-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Login</h5>\\n          <form #form=\\\"ngForm\\\" (submit)=\\\"handleJWTAuthLogin(form)\\\">\\n            <!-- User name div  -->\\n            <div class=\\\"input-group flex-nowrap\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <fa name=\\\"user\\\"></fa>\\n                </span>\\n              </div>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username \\\" [(ngModel)]=\\\"username\\\" required\\n                #UserName1=\\\"ngModel\\\" name=\\\"username\\\">\\n\\n            </div>\\n            <!-- Password div  -->\\n            <br>\\n            <div class=\\\"input-group flex-nowrap\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <fa name=\\\"key\\\"></fa>\\n                </span>\\n              </div>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" minlength=\\\"4\\\"\\n                required #Password1=\\\"ngModel\\\" name=\\\"password\\\">\\n            </div>\\n            <br>\\n            <div *ngIf=\\\"UserName1?.invalid && (Password1.dirty || UserName1.touched)\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"UserName1?.errors.required\\\">\\n                Required username\\n              </div>\\n              <div *ngIf=\\\"UserName1?.errors.minlength\\\">\\n                Username must be > 4 characters\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"Password1.invalid && (Password1.dirty || Password1.touched)\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"Password1?.errors.required\\\">\\n                The password is required\\n              </div>\\n              <div *ngIf=\\\"Password1?.errors.minlength\\\">\\n                The password must be > 4 characters\\n              </div>\\n            </div>\\n            <br>\\n            <button class=\\\"btn btn-success \\\" type=\\\"submit\\\"\\n              [disabled]=\\\"Password1?.invalid || UserName1?.invalid\\\">Login</button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\"","module.exports = \"<h1>You are logged out!</h1>\\n<div class=\\\"container\\\">\\n    Thank You for Using Our Application.\\n</div>\"","module.exports = \"<header>\\n    <nav class=\\\"navbar navbar-expand-md navbar-light\\\"  style=\\\"background-color:#3AC0E0\\\">\\n        <div><a  class=\\\"navbar-brand\\\">Diafoni</a></div>\\n        <ul class=\\\"navbar-nav\\\">\\n            <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/welcome/houarizegai\\\"\\n                    class=\\\"nav-link\\\">Home</a></li>\\n            <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/customers\\\"\\n                    class=\\\"nav-link\\\">Customers</a></li>\\n        </ul>\\n        <ul class=\\\"navbar-nav navbar-collapse justify-content-end\\\">\\n            <li><a *ngIf=\\\"!hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\"\\n                    class=\\\"nav-link\\\">Login</a></li>\\n            <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\"\\n                    class=\\\"nav-link\\\">Logout</a></li>\\n        </ul>\\n    </nav>\\n</header>\\n\"","module.exports = \"<h1>Welcome!</h1>\\n<div class=\\\"container\\\">\\n    Welcome {{name}}. You can manage the customers <a routerLink=\\\"/customers\\\">here</a>\\n</div>\\n<div class=\\\"container\\\">\\n    Click here to get a customized welcome message<br>\\n    <button (click)=\\\"getWelcomeMessage()\\\" class=\\\"btn btn-success\\\">Get Welcome Message</button>&nbsp;\\n    <button (click)=\\\"getWelcomeMessageWithPathVariable()\\\" class=\\\"btn btn-success\\\">Get Welcome Message With Path Variable</button>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"welcomeMessageFromService\\\">\\n    <h3>Your customized welcome message</h3>\\n    {{welcomeMessageFromService}}\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { ErrorComponent } from './error/error.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { RouteGuardService } from './service/route-guard.service';\nimport { CustomerFormComponent } from './customer-form/customer-form.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'welcome/:name', component: WelcomeComponent, canActivate: [RouteGuardService] },\n  { path: 'customers', component: CustomersComponent, canActivate: [RouteGuardService] },\n  { path: 'logout', component: LogoutComponent, canActivate: [RouteGuardService] },\n  { path: 'customers/:id', component: CustomerFormComponent, canActivate: [RouteGuardService] },\n  { path: '**', component: ErrorComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Customer Relationship Manager';\n}\n","export const API_URL = \"https://cutomermanagement.herokuapp.com\"","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CustomerFormComponent } from './customer-form/customer-form.component';\n\n// import some UI module\nimport { AlertModule } from 'ngx-bootstrap';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \nimport { ToastrModule } from 'ngx-toastr';\nimport { HttpIntercepterBasicAuthService } from './service/http/http-intercepter-basic-auth.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    LoginComponent,\n    ErrorComponent,\n    CustomersComponent,\n    MenuComponent,\n    FooterComponent,\n    LogoutComponent,\n    CustomerFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    AlertModule.forRoot(), // Alert from ngx bootstrap module added\n    AngularFontAwesomeModule, // Font awesome module added\n    BrowserAnimationsModule, // required animations module added\n    ToastrModule.forRoot() // ToastrModule module added  \n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: HttpIntercepterBasicAuthService, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".ng-invalid:not(form) {\\n    border-left: 5px solid #F00\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXItZm9ybS9jdXN0b21lci1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvY3VzdG9tZXItZm9ybS9jdXN0b21lci1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmctaW52YWxpZDpub3QoZm9ybSkge1xuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI0YwMFxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../customers/customers.component';\nimport { CustomerDataService } from '../service/data/customer-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-customer-form',\n  templateUrl: './customer-form.component.html',\n  styleUrls: ['./customer-form.component.css']\n})\nexport class CustomerFormComponent implements OnInit {\n\n  customer: Customer\n  id: number\n\n  constructor(private service: CustomerDataService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n\n    this.customer = new Customer(this.id, '', null, '');\n    if(this.id != -1)\n      this.service.retrieveCustomer(\"houarizegai\", this.id).subscribe(\n        response => this.customer = response\n      );\n  }\n\n  onSave() {\n      if(this.id == -1) {\n        // call create customer service\n        this.service.addCustomer({ username: \"houarizegai\", customer: this.customer }).subscribe(\n          response => {\n            console.log(response);\n            this.router.navigate(['customers']);\n          }\n        );\n      } else {\n        // call update customer service\n        this.service.updateCustomer(\"houarizegai\", this.customer).subscribe(\n          response => {\n            console.log(response);\n            this.router.navigate(['customers']);\n          }\n        );\n      }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVycy9jdXN0b21lcnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerDataService } from '../service/data/customer-data.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n\nexport class Customer {\n  constructor(\n    public id: number,\n    public name: string,\n    public birthDate: Date,\n    public email: string) {\n\n  }\n}\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  \n  customers: Customer[]\n  message: string\n\n\n  constructor(private service: CustomerDataService,\n   private router: Router,\n    private toastr: ToastrService) { }\n\n\n  ngOnInit() {\n    this.retrieveAllCustomers();\n  }\n\n  retrieveAllCustomers() {\n    this.service.retrieveAllCustomers(\"houarizegai\").subscribe(\n      response => {\n        // console.log(response);\n        this.customers = response;\n      }\n    );\n  }\n\n  addCustomer() {\n    this.router.navigate(['customers', -1]);\n  }\n\n  updateCustomer(id) {\n    // console.log(`Update Customer ${id}`);\n    this.router.navigate(['customers', id]);\n  }\n\n  deleteCustomer(id) {\n      // console.log(`Delete customer ${id}`);\n      this.service.deleteCustomer(\"houarizegai\", id).subscribe(\n        response => {\n          // console.log(response);\n          this.toastr.success('Success','The customer has been deleted!', {\n            timeOut: 3000\n          });         \n          this.retrieveAllCustomers(); // refresh customers\n        }\n      );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = 'An error occured! contact support at: support@houarizegai.net'\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".footer{\\n    background-color: #3AC0E0;\\n    position: absolute;\\n    bottom: 0;\\n    width: 100%;\\n    padding: 1rem;\\n    margin-top: 3rem;\\n    text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsV0FBVztJQUNYLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3RlcntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0FDMEUwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBtYXJnaW4tdG9wOiAzcmVtO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { from } from 'rxjs';\nimport { BasicAuthenticationService } from '../service/basic-authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n\n  username = ''\n  password = ''\n  errorMessage = 'Invalid Credentials'\n  invalidLogin = false\n  form: FormGroup;\n  \n  // like this: Angular.giveMeRouter\n  // dependency injection\n  constructor(\n    private router: Router, \n    private hardcodedAuthenticationService: HardcodedAuthenticationService,\n    private basicAuthenticationService: BasicAuthenticationService,\n    private toastr: ToastrService\n    ) { \n      this.form = new FormGroup({\n        username: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required)\n      });\n    }    \n\n  ngOnInit() {\n  }\n\n  handleLogin(form: NgForm) {\n    if(this.hardcodedAuthenticationService.authenticate(this.username, this.password)) {\n      this.invalidLogin = false;\n      this.router.navigate(['welcome', this.username]) \n    } else {\n      this.invalidLogin = true;\n      this.toastr.error('Error', this.errorMessage, {timeOut: 3000});\n    }\n  }\n  \n  handleBasicAuthLogin(form: NgForm) {\n    this.basicAuthenticationService.executeAuthenticationService(this.username, this.password).subscribe(\n      data => {\n        console.log(data);\n        this.invalidLogin = false;\n        this.router.navigate(['welcome', this.username]) \n      },\n      error => {\n        console.log(error);\n        this.invalidLogin = true;\n        this.toastr.error('Error', this.errorMessage, {timeOut: 3000});\n      }\n    );\n  }\n\n  handleJWTAuthLogin(form: NgForm) {\n    this.basicAuthenticationService.executeJWTAuthenticationService(this.username, this.password).subscribe(\n      data => {\n        console.log(data);\n        this.invalidLogin = false;\n        this.router.navigate(['welcome', this.username]) \n      },\n      error => {\n        console.log(error);\n        this.invalidLogin = true;\n        this.toastr.error('Error', this.errorMessage, {timeOut: 3000});\n      }\n    );\n  }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private hardcodedAuthenticateService: HardcodedAuthenticationService) { }\n\n  ngOnInit() {\n    this.hardcodedAuthenticateService.logout()\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  // isUserLoggedIn: boolean = false\n\n  constructor(private hardcodedAuthenticationService: HardcodedAuthenticationService) { }\n\n  ngOnInit() {\n      // this.isUserLoggedIn = this.hardcodedAuthenticationService.isUserLoggedIn()\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { API_URL } from '../app.constants';\n\nconst TOKEN = 'token'\nconst AUTHENTICATED_USER = 'authenticaterUser'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthenticationService {\n\n  constructor(private http: HttpClient) { }\n\n  executeJWTAuthenticationService(username: string, password: string) {\n    \n    return this.http.post<any>(\n      `${API_URL}/authenticate`, {\n        username,\n        password\n      }).pipe(\n        map(\n          data => { // if request success with response save user in session\n            sessionStorage.setItem(AUTHENTICATED_USER, username);\n            sessionStorage.setItem(TOKEN, `Bearer ${data.token}`);\n            return data;\n          }\n        )\n      );\n  }\n  \n  executeAuthenticationService(username, password) {\n    let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);\n\n    let headers = new HttpHeaders({\n      Authorization: basicAuthHeaderString\n    });\n\n    return this.http.get<AuthenticationBean>(`${API_URL}/basicauth`, {headers})\n    .pipe(\n      map(\n        data => { // if request success with response save user in session\n          sessionStorage.setItem(AUTHENTICATED_USER, username);\n          sessionStorage.setItem(TOKEN, basicAuthHeaderString);\n          return data;\n        }\n      )\n    );\n  }\n\n  getAuthenticatedUser() {\n    return sessionStorage.getItem(AUTHENTICATED_USER);\n  }\n\n  getAuthenticatedToken() {\n    if(this.getAuthenticatedUser())\n      return sessionStorage.getItem(TOKEN);\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(AUTHENTICATED_USER)\n    return !(user === null)\n  }\n\n  logout() {\n    sessionStorage.removeItem(AUTHENTICATED_USER)\n    sessionStorage.removeItem(TOKEN)\n  }\n}\n\nexport class AuthenticationBean {\n  constructor(public message: string) { }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Customer } from 'src/app/customers/customers.component';\nimport { API_URL } from 'src/app/app.constants';\nimport { BasicAuthenticationService } from '../basic-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerDataService {\n\n  constructor(private http: HttpClient) { }\n\n  retrieveAllCustomers(username: string) {\n    return this.http.get<Customer[]>(`${API_URL}/users/${username}/customers`);\n  }\n\n  retrieveCustomer(username: string, id: number) {\n    return this.http.get<Customer>(`${API_URL}/users/${username}/customers/${id}`);\n  }\n\n  addCustomer({ username, customer }: { username: string; customer: Customer; }) {\n    return this.http.post(`${API_URL}/users/${username}/customers`, customer);\n  }\n\n  updateCustomer(username: string, customer: Customer) {\n    return this.http.put(`${API_URL}/users/${username}/customers`, customer);\n  }\n\n  deleteCustomer(username: string, id: number) {\n    return this.http.delete(`${API_URL}/users/${username}/customers/${id}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL } from 'src/app/app.constants';\n\nexport class HelloWorldBean {\n  constructor(public message: string) {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WelcomeDataService {\n\n  constructor(private http: HttpClient) { }\n\n  executeHelloWorldBeanService() {\n    return this.http.get<HelloWorldBean>(`${API_URL}/hello-world-bean`);\n  }\n\n  executeHelloWorldServiceWithPathVariable(name: string) {\n    // let basicAuthHeaderString = this.createBasicAuthenticationHeader();\n\n    // let headers = new HttpHeaders({\n    //   Authorization: basicAuthHeaderString\n    // });\n\n    return this.http.get<HelloWorldBean>(`${API_URL}/hello-world/${name}`, \n    // {headers}\n    );\n  }\n\n  // createBasicAuthenticationHeader() {\n  //   let username =  'houarizegai';\n  //   let password = '0000';\n  //   // btoa method: convert a string to base-64 encoding\n  //   let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);\n  //   return basicAuthHeaderString;\n  // }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HardcodedAuthenticationService {\n\n  constructor() { }\n\n  authenticate(username, password) {\n    if(username === \"houarizegai\" && password === \"0000\") {\n      sessionStorage.setItem('authenticaterUser', username);\n      return true;\n    }\n    return false;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticaterUser')\n    return !(user === null)\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticaterUser')\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpClient } from '@angular/common/http';\nimport { BasicAuthenticationService } from '../basic-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpIntercepterBasicAuthService implements HttpInterceptor {\n  \n  constructor(private basicAuthenticationService: BasicAuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    // let username = 'houarizegai';\n    // let password = '0000';\n    // let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);\n    let basicAuthHeaderString = this.basicAuthenticationService.getAuthenticatedToken()\n    let username = this.basicAuthenticationService.getAuthenticatedUser()\n    \n    if(basicAuthHeaderString && username) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: basicAuthHeaderString\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { HardcodedAuthenticationService } from './hardcoded-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n  \n  constructor(private hardcodedAuthenticationService: HardcodedAuthenticationService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if(this.hardcodedAuthenticationService.isUserLoggedIn())\n      return true;\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WelcomeDataService } from '../service/data/welcome-data.service';\n\n// decorator (annotation in java)\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\n\nexport class WelcomeComponent implements OnInit {\n\n  message = 'Welcome message'\n  welcomeMessageFromService: string\n  name = ''\n\n  // adding Activate route for get parameter from the url\n  constructor(private route: ActivatedRoute, private service: WelcomeDataService) { }\n\n  ngOnInit() {\n    // compilation error: this.message = 10\n    console.log(this.message)\n    this.name = this.route.snapshot.params['name'] // get the parameter passing in the url\n  }\n\n  getWelcomeMessage() {\n    // console.log(this.service.executeHelloWorldBeanService());\n    this.service.executeHelloWorldBeanService().subscribe(\n      response => this.handleSuccessfulResponse(response),\n      error => this.handleErrorResponse(error)\n    );\n  }\n\n  getWelcomeMessageWithPathVariable() {\n    this.service.executeHelloWorldServiceWithPathVariable(this.name).subscribe(\n      response => this.handleSuccessfulResponse(response)\n    );\n  }\n\n  handleSuccessfulResponse(response) {\n    // console.log(response.message);\n    this.welcomeMessageFromService = response.message;\n  }\n\n  handleErrorResponse(error) {\n    // console.log(error.error.message);\n    // console.log(error);\n    this.welcomeMessageFromService = error.error.message;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}